---
title: "Google Play Store Apps: Data Exploration"
format: html
execute:
  warning: false
  message: false
---

## Setup

```{r}
library(readr)
library(ggplot2)
library(dplyr)

# Load data
data_source <- "https://raw.githubusercontent.com/simoneSantoni/data-viz-smm635/refs/heads/master/data/googleplaystore.csv"
apps <- read_csv(data_source)
```

::: {.callout-note}
This dataset from [Kaggle's Google Play Store Apps project](https://www.kaggle.com/datasets/lava18/google-play-store-apps) contains information on ~10K Android apps including ratings, reviews, pricing, and categories.
:::

## Data Overview

```{r}
spec(apps)  # Column specifications
apps        # Data preview
```

### Key Variables

| Variable | Type | Description | Notes |
|----------|------|-------------|-------|
| **App** | String | Application name | May contain special characters |
| **Category** | Categorical | Primary app category (33 categories) | Contains some miscoded entries |
| **Rating** | Float | Average user rating (1.0-5.0) | Missing for unrated apps |
| **Reviews** | Integer | Total number of user reviews | Indicator of popularity |
| **Size** | String | App size with units (e.g., "19M") | Requires parsing; "Varies with device" for some |
| **Installs** | Categorical | Install count ranges (e.g., "10,000+") | Ordinal categories, not exact counts |
| **Type** | Binary | "Free" or "Paid" | Contains data quality issues |
| **Price** | String | Price in USD (e.g., "$2.99") | "0" for free apps |
| **Content Rating** | Categorical | Age appropriateness | "Everyone", "Teen", "Mature 17+", etc. |
| **Genres** | String | Detailed genre (may be multiple) | Semicolon-separated |
| **Last Updated** | Date | Last update date | Format: "Month Day, Year" |
| **Current Ver** | String | App version | Non-standardized format |
| **Android Ver** | String | Minimum Android version required | Format: "X.X.X and up" |      

## Data Visualization

### Univariate Distributions

#### Categorical Variables

**Bar charts** are the standard approach for visualizing categorical distributions. @fig-bar-chart reveals data quality issues: some apps have $Type = 0$ and missing values ($NaN$).

::: {.panel-tabset}

## Bar Chart
```{r}
#| fig-cap: App distribution by pricing type
#| label: fig-bar-chart

ggplot(apps, aes(x = Type)) +
  geom_bar()
```

## Pie Chart
```{r}
#| fig-cap: Alternative pie chart representation
#| label: fig-pie-chart

ggplot(apps, aes(x = "", fill = Type)) +
  geom_bar(width = 1) +
  coord_polar(theta = "y") +
  theme_void()
```

## Data Quality Check
```{r}
#| fig-cap: Miscoded Type values (neither Free nor Paid)
#| label: fig-type-issues

apps %>%
  filter(Type != "Free" & Type != "Paid") %>%
  ggplot(aes(x = Type)) +
  geom_bar()
```
:::

#### Continuous Variables

The **Reviews** variable exhibits strong right skew. Multiple visualization approaches reveal different aspects of the distribution. Note: `geom_histogram()` defaults to 30 bins; adjust with `bins` argument.

::: {.panel-tabset}

## Histogram
```{r}
#| fig-cap: Review count distribution (raw scale)
#| label: fig-reviews-hist

ggplot(apps, aes(x = Reviews)) +
  geom_histogram()
```

## Histogram (Log Scale)
```{r}
#| fig-cap: Review count distribution (log₁₀ scale)
#| label: fig-reviews-hist-log

ggplot(apps, aes(x = Reviews)) +
  geom_histogram() +
  scale_x_log10()
```

## Boxplot (Horizontal)
```{r}
#| fig-cap: Review summary statistics (log₁₀ scale)
#| label: fig-boxplot

ggplot(apps, aes(x = Reviews)) +
  geom_boxplot() +
  scale_x_log10()
```

## Boxplot (Vertical)
```{r}
#| fig-cap: Vertical boxplot using y aesthetic
#| label: fig-boxplot-vertical

ggplot(apps, aes(y = Reviews)) +
  geom_boxplot() +
  scale_y_log10()
```

## Density Plot
```{r}
#| fig-cap: Smoothed density estimate (log₁₀ scale)
#| label: fig-density

ggplot(apps, aes(x = Reviews)) +
  geom_density() +
  scale_x_log10()
```
:::

### Bivariate Relationships

#### Categorical vs Continuous

**Grouped visualizations** reveal how continuous variables differ across categories. @fig-rating-by-type compares rating distributions between free and paid apps.

::: {.panel-tabset}

## Grouped Boxplots
```{r}
#| fig-cap: Rating distribution by app type
#| label: fig-rating-by-type

apps %>%
  filter(Type %in% c("Free", "Paid")) %>%
  ggplot(aes(x = Type, y = Rating, fill = Type)) +
  geom_boxplot() +
  theme_minimal()
```

## Violin Plots
```{r}
#| fig-cap: Rating density by app type
#| label: fig-rating-violin

apps %>%
  filter(Type %in% c("Free", "Paid")) %>%
  ggplot(aes(x = Type, y = Rating, fill = Type)) +
  geom_violin() +
  theme_minimal()
```

## Grouped Histograms
```{r}
#| fig-cap: Rating distribution faceted by type
#| label: fig-rating-facet

apps %>%
  filter(Type %in% c("Free", "Paid")) %>%
  ggplot(aes(x = Rating, fill = Type)) +
  geom_histogram(bins = 30) +
  facet_wrap(~Type, ncol = 1) +
  theme_minimal()
```
:::

#### Continuous vs Continuous

**Scatterplots** visualize relationships between two continuous variables. @fig-reviews-rating explores whether highly-reviewed apps have better ratings.

::: {.panel-tabset}

## Basic Scatterplot
```{r}
#| fig-cap: Relationship between reviews and ratings
#| label: fig-reviews-rating

apps %>%
  filter(!is.na(Rating)) %>%
  ggplot(aes(x = Reviews, y = Rating)) +
  geom_point(alpha = 0.3) +
  scale_x_log10() +
  theme_minimal()
```

## With Smoothing
```{r}
#| fig-cap: Reviews vs ratings with LOESS smoother
#| label: fig-reviews-rating-smooth

apps %>%
  filter(!is.na(Rating)) %>%
  ggplot(aes(x = Reviews, y = Rating)) +
  geom_point(alpha = 0.2) +
  geom_smooth(method = "loess", color = "red") +
  scale_x_log10() +
  theme_minimal()
```

## Colored by Type
```{r}
#| fig-cap: Reviews vs ratings, colored by app type
#| label: fig-reviews-rating-type

apps %>%
  filter(!is.na(Rating), Type %in% c("Free", "Paid")) %>%
  ggplot(aes(x = Reviews, y = Rating, color = Type)) +
  geom_point(alpha = 0.4) +
  scale_x_log10() +
  theme_minimal()
```
:::

#### Categorical vs Categorical

**Stacked and grouped bar charts** show relationships between categorical variables. @fig-type-by-content examines how app pricing varies across content ratings.

::: {.panel-tabset}

## Stacked Bar Chart
```{r}
#| fig-cap: App type distribution by content rating
#| label: fig-type-by-content

apps %>%
  filter(Type %in% c("Free", "Paid")) %>%
  ggplot(aes(x = `Content Rating`, fill = Type)) +
  geom_bar() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Grouped Bar Chart
```{r}
#| fig-cap: Side-by-side comparison of app types
#| label: fig-type-by-content-dodge

apps %>%
  filter(Type %in% c("Free", "Paid")) %>%
  ggplot(aes(x = `Content Rating`, fill = Type)) +
  geom_bar(position = "dodge") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Proportional (Filled)
```{r}
#| fig-cap: Proportion of free vs paid apps by content rating
#| label: fig-type-by-content-fill

apps %>%
  filter(Type %in% c("Free", "Paid")) %>%
  ggplot(aes(x = `Content Rating`, fill = Type)) +
  geom_bar(position = "fill") +
  labs(y = "Proportion") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
:::

### Advanced Visualizations

#### Top Categories Analysis

Examining the most popular app categories reveals market concentration.

```{r}
#| fig-cap: Top 10 app categories by count
#| label: fig-top-categories

apps %>%
  count(Category, sort = TRUE) %>%
  head(10) %>%
  ggplot(aes(x = reorder(Category, n), y = n)) +
  geom_col(fill = "steelblue") +
  coord_flip() +
  labs(x = "Category", y = "Number of Apps") +
  theme_minimal()
```

#### Rating Distribution by Top Categories

```{r}
#| fig-cap: Rating distributions across top 5 categories
#| label: fig-rating-by-category

top_categories <- apps %>%
  count(Category, sort = TRUE) %>%
  head(5) %>%
  pull(Category)

apps %>%
  filter(Category %in% top_categories, !is.na(Rating)) %>%
  ggplot(aes(x = Category, y = Rating, fill = Category)) +
  geom_boxplot() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none")
```

## Summary Insights

::: {.callout-tip}
## Key Findings

1. **Market Composition**: The majority of apps are free (~92%), with paid apps representing a small fraction of the market.

2. **Data Quality**: Several variables contain miscoded entries (Type field) and missing values that require cleaning for robust analysis.

3. **Distribution Patterns**: Review counts are highly right-skewed, suggesting a few apps dominate user engagement while most receive minimal reviews.

4. **Category Concentration**: Family and Game categories dominate the app store, together accounting for ~28% of all apps.

5. **Rating Patterns**: Most apps cluster around 4.0-4.5 stars, with paid apps showing slightly higher median ratings than free apps.
:::

## Next Steps

- **Data Cleaning**: Address missing values and miscoded entries in Type, Category, and other fields
- **Feature Engineering**: Parse Size and Installs into numeric formats for quantitative analysis
- **Advanced Analysis**: Examine temporal patterns using Last Updated, analyze price elasticity, investigate category-specific trends
- **Multivariate Analysis**: Build models to predict ratings or success metrics based on app characteristics

