---
title: "Access Computing Resources"
---

This guide will help you set up all the software needed for SMM635. All tools are free and open-source.

## Quick Start

::: {.callout-note}
## Installation Party
We'll have a dedicated session in Week 1 Lab to help everyone get set up. Don't worry if you run into issues!
:::

## Required Software

### 1. Python Environment

We recommend using Anaconda, which includes Python and essential data science packages.

#### Installation Steps

1. **Download Anaconda**
   - Visit [anaconda.com/download](https://www.anaconda.com/download)
   - Choose Python 3.9+ version for your operating system
   - Download the installer (graphical installer recommended)

2. **Install Anaconda**
   - Run the installer
   - Accept default settings
   - **Important**: Add Anaconda to your PATH (Windows users)

3. **Create Course Environment**
   ```bash
   # Download the environment file from course repo
   curl -O https://raw.githubusercontent.com/simoneSantoni/data-viz-smm635/main/resources/smm635.yaml
   
   # Create the environment
   conda env create -f smm635.yaml
   
   # Activate the environment
   conda activate smm635
   ```

4. **Verify Installation**
   ```bash
   python --version  # Should show Python 3.9+
   jupyter --version # Should show jupyter installation
   ```

### 2. R and RStudio

#### Installation Steps

1. **Install R**
   - Visit [r-project.org](https://www.r-project.org/)
   - Choose your CRAN mirror
   - Download R 4.0+ for your operating system

2. **Install RStudio**
   - Visit [posit.co/downloads](https://posit.co/downloads/)
   - Download RStudio Desktop (free version)
   - Install following default settings

3. **Install Required Packages**
   ```r
   # Run in RStudio console
   install.packages(c(
     "tidyverse",
     "plotly", 
     "shiny",
     "gganimate",
     "RColorBrewer",
     "viridis",
     "patchwork",
     "here"
   ))
   ```

### 3. Visual Studio Code (Optional but Recommended)

VS Code is a powerful editor that works well with both Python and R.

1. **Download VS Code**
   - Visit [code.visualstudio.com](https://code.visualstudio.com/)
   - Download for your operating system

2. **Install Extensions**
   - Python
   - R
   - Jupyter
   - Rainbow CSV
   - Live Share (for collaboration)

### 4. Git and GitHub

Version control is essential for tracking your work and collaborating.

1. **Install Git**
   - Visit [git-scm.com](https://git-scm.com/)
   - Download and install
   - Configure with your information:
   ```bash
   git config --global user.name "Your Name"
   git config --global user.email "your.email@example.com"
   ```

2. **Create GitHub Account**
   - Visit [github.com](https://github.com/)
   - Sign up for free account
   - Consider applying for [GitHub Student Pack](https://education.github.com/pack)

3. **Set up SSH Key (Optional)**
   ```bash
   ssh-keygen -t ed25519 -C "your.email@example.com"
   # Follow prompts, then add to GitHub settings
   ```

## Platform-Specific Instructions

::: {.panel-tabset}

### Windows

**Additional Tools**
- Install [Windows Terminal](https://aka.ms/terminal) for better command line experience
- Consider [WSL2](https://docs.microsoft.com/windows/wsl/install) for Linux environment

**Common Issues**
- If conda commands don't work, add to PATH manually
- Disable antivirus temporarily during installation
- Run installers as administrator

### macOS

**Prerequisites**
- Install Xcode Command Line Tools:
  ```bash
  xcode-select --install
  ```

**Homebrew (Optional)**
- Install [Homebrew](https://brew.sh/) for easier package management
- Then use: `brew install git r`

**Common Issues**
- Grant terminal permissions in Security settings
- M1 Macs: Some packages may need Rosetta 2

### Linux

**Package Managers**
- Ubuntu/Debian: `apt-get`
- Fedora: `dnf`
- Arch: `pacman`

**Example (Ubuntu)**
```bash
sudo apt update
sudo apt install python3-pip git r-base
```

**Common Issues**
- May need to install additional system libraries
- Check your distribution's documentation

:::

## Cloud Alternatives

If you have trouble with local installation, these cloud services work well:

### For Python
- [Google Colab](https://colab.research.google.com/) - Free, no setup required
- [Kaggle Notebooks](https://www.kaggle.com/code) - Free, includes datasets
- [Deepnote](https://deepnote.com/) - Free tier available

### For R
- [RStudio Cloud](https://rstudio.cloud/) - Free tier with 25 hours/month
- [CoCalc](https://cocalc.com/) - Free tier available

### For Both
- [Binder](https://mybinder.org/) - Turn any GitHub repo into interactive environment
- University computing clusters (check with IT)

## Verifying Your Setup

Run this verification script to check everything is working:

::: {.panel-tabset}

### Python Check

```python
# save as check_setup.py
import sys
import importlib

packages = [
    'numpy', 'pandas', 'matplotlib', 
    'seaborn', 'plotly', 'altair',
    'jupyter', 'notebook'
]

print(f"Python {sys.version}")
print("-" * 50)

for package in packages:
    try:
        mod = importlib.import_module(package)
        version = getattr(mod, '__version__', 'installed')
        print(f"✓ {package}: {version}")
    except ImportError:
        print(f"✗ {package}: NOT INSTALLED")
```

### R Check

```r
# save as check_setup.R
packages <- c(
  "tidyverse", "plotly", "shiny",
  "gganimate", "RColorBrewer", "viridis"
)

cat("R", R.version.string, "\n")
cat(rep("-", 50), "\n", sep="")

for (pkg in packages) {
  if (requireNamespace(pkg, quietly = TRUE)) {
    ver <- packageVersion(pkg)
    cat("✓", pkg, ":", as.character(ver), "\n")
  } else {
    cat("✗", pkg, ": NOT INSTALLED\n")
  }
}
```

:::

## Getting Help

### During Installation
1. Check the [Troubleshooting Guide](computing-troubleshooting.html)
2. Search error messages online
3. Post on course forum with:
   - Your operating system
   - Complete error message
   - Steps you've tried

### After Installation
- Test with simple plots first
- Keep environments updated
- Regular backups of your work

::: {.callout-tip}
## Best Practice
Create a dedicated folder for this course and organize by week:
```
SMM635/
├── week01/
├── week02/
├── projects/
└── data/
```
:::

## Next Steps

Once everything is installed:
1. Complete Lab 1 to test your setup
2. Join the course GitHub organization
3. Explore the example notebooks
4. Start your visualization journal!

Questions? See the [Support page](course-support.html) for help options.