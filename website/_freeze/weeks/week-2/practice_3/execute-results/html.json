{
  "hash": "c89fcc87fdb1cf0d763a0233719f49ba",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Faceting and Multi-Panel Layouts with ggplot2\"\nformat: html\nexecute:\n  warning: false\n  message: false\n---\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(patchwork)\n\n# Load data\ndata_source <- \"https://raw.githubusercontent.com/simoneSantoni/data-viz-smm635/refs/heads/master/data/googleplaystore.csv\"\napps <- read_csv(data_source)\n\n# Clean data\napps <- apps %>%\n  mutate(\n    Reviews = as.numeric(Reviews),\n    Rating = as.numeric(Rating)\n  ) %>%\n  filter(Type %in% c(\"Free\", \"Paid\"))\n```\n:::\n\n\n::: {.callout-note}\nThis document demonstrates advanced layout techniques in ggplot2:\n\n- **Faceting**: Built-in ggplot2 features for creating small multiples\n- **Patchwork**: A powerful extension for combining independent plots with flexible layouts\n:::\n\n## Faceting in ggplot2\n\nFaceting creates multiple panels based on categorical variables, allowing comparison across subgroups. ggplot2 provides two main faceting functions:\n\n### facet_wrap()\n\n`facet_wrap()` wraps a 1D sequence of panels into 2D, useful for faceting by a single variable.\n\n::: {.panel-tabset}\n\n## Basic Faceting\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  ggplot(aes(x = Rating)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", alpha = 0.7) +\n  facet_wrap(~Type) +\n  theme_minimal() +\n  labs(title = \"Rating Distribution by App Type\",\n       x = \"Rating\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![Rating distribution faceted by app type](practice_3_files/figure-html/fig-facet-wrap-basic-1.png){#fig-facet-wrap-basic width=672}\n:::\n:::\n\n\n## Custom Layout\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(`Content Rating` %in% c(\"Everyone\", \"Teen\", \"Mature 17+\", \"Everyone 10+\")) %>%\n  ggplot(aes(x = Rating)) +\n  geom_density(fill = \"coral\", alpha = 0.6) +\n  facet_wrap(~`Content Rating`, ncol = 2) +\n  theme_minimal() +\n  labs(title = \"Rating Density by Content Rating\",\n       x = \"Rating\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![Controlling facet layout with ncol](practice_3_files/figure-html/fig-facet-wrap-layout-1.png){#fig-facet-wrap-layout width=672}\n:::\n:::\n\n\n## Free Scales\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(`Content Rating` %in% c(\"Everyone\", \"Teen\", \"Mature 17+\")) %>%\n  ggplot(aes(x = Reviews)) +\n  geom_histogram(bins = 20, fill = \"darkgreen\", alpha = 0.7) +\n  facet_wrap(~`Content Rating`, scales = \"free\") +\n  scale_x_log10() +\n  theme_minimal() +\n  labs(title = \"Review Distribution with Independent Scales\",\n       x = \"Reviews (log scale)\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![Independent scales for each facet](practice_3_files/figure-html/fig-facet-free-scales-1.png){#fig-facet-free-scales width=672}\n:::\n:::\n\n\n:::\n\n### facet_grid()\n\n`facet_grid()` forms a matrix of panels defined by row and column faceting variables. Perfect for examining interactions between two categorical variables.\n\n::: {.panel-tabset}\n\n## Grid by Two Variables\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(`Content Rating` %in% c(\"Everyone\", \"Teen\")) %>%\n  ggplot(aes(x = Reviews, y = Rating)) +\n  geom_point(alpha = 0.3, color = \"purple\") +\n  geom_smooth(method = \"lm\", color = \"red\", se = FALSE) +\n  facet_grid(Type ~ `Content Rating`) +\n  scale_x_log10() +\n  theme_minimal() +\n  labs(title = \"Reviews vs Rating: Type ï¿½ Content Rating\",\n       x = \"Reviews (log scale)\", y = \"Rating\")\n```\n\n::: {.cell-output-display}\n![Two-way faceting with facet_grid](practice_3_files/figure-html/fig-facet-grid-basic-1.png){#fig-facet-grid-basic width=672}\n:::\n:::\n\n\n## Row Facets Only\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  ggplot(aes(x = Rating, fill = Type)) +\n  geom_density(alpha = 0.5) +\n  facet_grid(Type ~ .) +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set1\") +\n  labs(title = \"Rating Density by App Type (Row Facets)\",\n       x = \"Rating\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![Faceting by rows only](practice_3_files/figure-html/fig-facet-grid-rows-1.png){#fig-facet-grid-rows width=672}\n:::\n:::\n\n\n## Column Facets Only\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  ggplot(aes(x = Rating, fill = Type)) +\n  geom_histogram(bins = 30, alpha = 0.7, position = \"identity\") +\n  facet_grid(. ~ Type) +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(title = \"Rating Distribution by App Type (Column Facets)\",\n       x = \"Rating\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![Faceting by columns only](practice_3_files/figure-html/fig-facet-grid-cols-1.png){#fig-facet-grid-cols width=672}\n:::\n:::\n\n\n:::\n\n## Patchwork: Flexible Multi-Panel Layouts\n\nThe [patchwork](https://github.com/thomasp85/patchwork) package extends ggplot2's capabilities by allowing you to combine independent plots with intuitive operators.\n\n### Basic Patchwork Operators\n\n::: {.panel-tabset}\n\n## Side-by-Side (+)\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- apps %>%\n  ggplot(aes(x = Type, fill = Type)) +\n  geom_bar() +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Pastel1\") +\n  labs(title = \"App Count by Type\", x = \"\", y = \"Count\")\n\np2 <- apps %>%\n  ggplot(aes(x = Type, y = Rating, fill = Type)) +\n  geom_boxplot() +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Pastel1\") +\n  labs(title = \"Rating Distribution\", x = \"\", y = \"Rating\")\n\np1 + p2\n```\n\n::: {.cell-output-display}\n![Combining plots horizontally with +](practice_3_files/figure-html/fig-patchwork-plus-1.png){#fig-patchwork-plus width=672}\n:::\n:::\n\n\n## Stacked (/)\n\n::: {.cell}\n\n```{.r .cell-code}\np3 <- apps %>%\n  filter(Reviews > 0) %>%\n  ggplot(aes(x = Reviews)) +\n  geom_histogram(bins = 50, fill = \"skyblue\") +\n  scale_x_log10() +\n  theme_minimal() +\n  labs(title = \"Review Count Distribution\", x = \"Reviews (log scale)\", y = \"Count\")\n\np4 <- apps %>%\n  ggplot(aes(x = Rating)) +\n  geom_histogram(bins = 30, fill = \"salmon\") +\n  theme_minimal() +\n  labs(title = \"Rating Distribution\", x = \"Rating\", y = \"Count\")\n\np3 / p4\n```\n\n::: {.cell-output-display}\n![Stacking plots vertically with /](practice_3_files/figure-html/fig-patchwork-stack-1.png){#fig-patchwork-stack width=672}\n:::\n:::\n\n\n## Complex Layouts\n\n::: {.cell}\n\n```{.r .cell-code}\np5 <- apps %>%\n  ggplot(aes(x = `Content Rating`, fill = Type)) +\n  geom_bar(position = \"dodge\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_fill_brewer(palette = \"Set3\") +\n  labs(title = \"Apps by Content Rating & Type\", x = \"\", y = \"Count\")\n\n(p1 + p2) / p5\n```\n\n::: {.cell-output-display}\n![Combining operators for complex layouts](practice_3_files/figure-html/fig-patchwork-complex-1.png){#fig-patchwork-complex width=672}\n:::\n:::\n\n\n:::\n\n### Advanced Patchwork Features\n\n::: {.panel-tabset}\n\n## Plot Annotations\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined <- p1 + p2 + p3 + p4\n\ncombined +\n  plot_annotation(\n    title = 'Google Play Store Apps Analysis',\n    subtitle = 'Distribution of key metrics across app types',\n    tag_levels = 'A',\n    theme = theme(plot.title = element_text(size = 16, face = \"bold\"))\n  )\n```\n\n::: {.cell-output-display}\n![Adding tags and titles with plot_annotation](practice_3_files/figure-html/fig-patchwork-annotation-1.png){#fig-patchwork-annotation width=672}\n:::\n:::\n\n\n## Layout Control\n\n::: {.cell}\n\n```{.r .cell-code}\np1 + p2 + p3 + p4 +\n  plot_layout(ncol = 2, heights = c(1, 2))\n```\n\n::: {.cell-output-display}\n![Custom layouts with plot_layout](practice_3_files/figure-html/fig-patchwork-layout-1.png){#fig-patchwork-layout width=672}\n:::\n:::\n\n\n## Nested Layouts\n\n::: {.cell}\n\n```{.r .cell-code}\np6 <- apps %>%\n  filter(Reviews > 0, !is.na(Rating)) %>%\n  ggplot(aes(x = Reviews, y = Rating, color = Type)) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_x_log10() +\n  scale_color_brewer(palette = \"Set1\") +\n  theme_minimal() +\n  labs(title = \"Reviews vs Rating\", x = \"Reviews (log)\", y = \"Rating\")\n\np7 <- apps %>%\n  count(Type, `Content Rating`) %>%\n  filter(`Content Rating` %in% c(\"Everyone\", \"Teen\", \"Mature 17+\")) %>%\n  ggplot(aes(x = `Content Rating`, y = n, fill = Type)) +\n  geom_col(position = \"dodge\") +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set1\") +\n  labs(title = \"Distribution by Content Rating\", x = \"\", y = \"Count\")\n\n(p6 | (p1 / p2)) + plot_layout(widths = c(2, 1))\n```\n\n::: {.cell-output-display}\n![Nesting layouts for asymmetric designs](practice_3_files/figure-html/fig-patchwork-nested-1.png){#fig-patchwork-nested width=672}\n:::\n:::\n\n\n:::\n\n### Collecting Guides\n\nWhen plots share legends, patchwork can collect them into a single legend:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np8 <- apps %>%\n  filter(Reviews > 0) %>%\n  ggplot(aes(x = Reviews, fill = Type)) +\n  geom_histogram(bins = 30, alpha = 0.7) +\n  scale_x_log10() +\n  scale_fill_brewer(palette = \"Dark2\") +\n  theme_minimal() +\n  labs(title = \"Review Distribution\", x = \"Reviews (log)\", y = \"Count\")\n\np9 <- apps %>%\n  filter(!is.na(Rating)) %>%\n  ggplot(aes(x = Rating, fill = Type)) +\n  geom_density(alpha = 0.6) +\n  scale_fill_brewer(palette = \"Dark2\") +\n  theme_minimal() +\n  labs(title = \"Rating Density\", x = \"Rating\", y = \"Density\")\n\np8 + p9 + plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![Collecting legends with guides = 'collect'](practice_3_files/figure-html/fig-patchwork-guides-1.png){#fig-patchwork-guides width=672}\n:::\n:::\n\n\n## Faceting vs Patchwork: When to Use Which?\n\n| Feature | facet_wrap / facet_grid | patchwork |\n|---------|------------------------|-----------|\n| **Use case** | Same plot type, same variables, different subgroups | Different plot types, different variables, or different data |\n| **Data source** | Single data frame | Multiple data frames or sources |\n| **Aesthetics** | Shared across all panels | Independent per plot |\n| **Scales** | Can be fixed or freed | Fully independent |\n| **Layout** | Regular grid | Flexible, asymmetric layouts |\n| **Legends** | Automatically unified | Can be collected or kept separate |\n| **Annotations** | Standard ggplot2 labels | Advanced with plot_annotation() |\n\n::: {.callout-tip}\n## Best Practices\n\n- **Use faceting** when exploring how a single relationship varies across categories\n- **Use patchwork** when combining conceptually different visualizations into a dashboard\n- **Combine both**: Facet individual plots, then use patchwork to arrange them\n:::\n\n## Example: Complete Analysis Dashboard\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Overview panel\noverview <- apps %>%\n  count(Type, `Content Rating`) %>%\n  filter(`Content Rating` %in% c(\"Everyone\", \"Teen\", \"Mature 17+\", \"Everyone 10+\")) %>%\n  ggplot(aes(x = `Content Rating`, y = n, fill = Type)) +\n  geom_col(position = \"dodge\") +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set1\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"App Distribution\", x = \"\", y = \"Count\")\n\n# Rating analysis with facets\nrating_facet <- apps %>%\n  filter(`Content Rating` %in% c(\"Everyone\", \"Teen\")) %>%\n  ggplot(aes(x = Rating, fill = Type)) +\n  geom_density(alpha = 0.6) +\n  facet_wrap(~`Content Rating`) +\n  scale_fill_brewer(palette = \"Set1\") +\n  theme_minimal() +\n  labs(title = \"Rating Density by Content Rating\", x = \"Rating\", y = \"Density\")\n\n# Reviews analysis\nreviews_scatter <- apps %>%\n  filter(Reviews > 0, !is.na(Rating)) %>%\n  ggplot(aes(x = Reviews, y = Rating, color = Type)) +\n  geom_point(alpha = 0.3, size = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE, size = 1) +\n  scale_x_log10() +\n  scale_color_brewer(palette = \"Set1\") +\n  theme_minimal() +\n  labs(title = \"Reviews vs Rating\", x = \"Reviews (log scale)\", y = \"Rating\")\n\n# Combine with patchwork\n(overview | rating_facet) / reviews_scatter +\n  plot_layout(heights = c(1, 1.5), guides = \"collect\") +\n  plot_annotation(\n    title = 'Google Play Store Apps: Comprehensive Analysis',\n    subtitle = 'Combining faceting and patchwork for effective data storytelling',\n    tag_levels = 'A',\n    theme = theme(\n      plot.title = element_text(size = 18, face = \"bold\"),\n      plot.subtitle = element_text(size = 12)\n    )\n  ) &\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![Comprehensive dashboard combining faceting and patchwork](practice_3_files/figure-html/fig-complete-dashboard-1.png){#fig-complete-dashboard width=1152}\n:::\n:::\n\n\n## Summary\n\nThis document demonstrated:\n\n1. **facet_wrap()**: For wrapping panels in a ribbon\n2. **facet_grid()**: For creating rectangular grids\n3. **Patchwork operators**: `+` (side-by-side), `/` (stacked), `|` (compose)\n4. **plot_layout()**: Fine control over dimensions and arrangement\n5. **plot_annotation()**: Adding titles, tags, and themes\n6. **Collecting guides**: Unifying legends across plots\n\n::: {.callout-important}\n## Further Learning\n\n- [Patchwork GitHub](https://github.com/thomasp85/patchwork)\n- [Patchwork documentation](https://patchwork.data-imaginist.com/)\n- [ggplot2 book on faceting](https://ggplot2-book.org/facet.html)\n:::\n",
    "supporting": [
      "practice_3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}