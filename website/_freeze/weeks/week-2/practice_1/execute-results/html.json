{
  "hash": "0ede2d0625f655980766882505fc35fa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Google Play Store Apps: Data Exploration\"\nformat: html\nexecute:\n  warning: false\n  message: false\n---\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Load data\ndata_source <- \"https://raw.githubusercontent.com/simoneSantoni/data-viz-smm635/refs/heads/master/data/googleplaystore.csv\"\napps <- read_csv(data_source)\n```\n:::\n\n\n::: {.callout-note}\nThis dataset from [Kaggle's Google Play Store Apps project](https://www.kaggle.com/datasets/lava18/google-play-store-apps) contains information on ~10K Android apps including ratings, reviews, pricing, and categories.\n:::\n\n## Data Overview\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspec(apps)  # Column specifications\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ncols(\n  App = col_character(),\n  Category = col_character(),\n  Rating = col_double(),\n  Reviews = col_double(),\n  Size = col_character(),\n  Installs = col_character(),\n  Type = col_character(),\n  Price = col_character(),\n  `Content Rating` = col_character(),\n  Genres = col_character(),\n  `Last Updated` = col_character(),\n  `Current Ver` = col_character(),\n  `Android Ver` = col_character()\n)\n```\n\n\n:::\n\n```{.r .cell-code}\napps        # Data preview\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10,841 × 13\n   App       Category Rating Reviews Size  Installs Type  Price `Content Rating`\n   <chr>     <chr>     <dbl>   <dbl> <chr> <chr>    <chr> <chr> <chr>           \n 1 Photo Ed… ART_AND…    4.1     159 19M   10,000+  Free  0     Everyone        \n 2 Coloring… ART_AND…    3.9     967 14M   500,000+ Free  0     Everyone        \n 3 U Launch… ART_AND…    4.7   87510 8.7M  5,000,0… Free  0     Everyone        \n 4 Sketch -… ART_AND…    4.5  215644 25M   50,000,… Free  0     Teen            \n 5 Pixel Dr… ART_AND…    4.3     967 2.8M  100,000+ Free  0     Everyone        \n 6 Paper fl… ART_AND…    4.4     167 5.6M  50,000+  Free  0     Everyone        \n 7 Smoke Ef… ART_AND…    3.8     178 19M   50,000+  Free  0     Everyone        \n 8 Infinite… ART_AND…    4.1   36815 29M   1,000,0… Free  0     Everyone        \n 9 Garden C… ART_AND…    4.4   13791 33M   1,000,0… Free  0     Everyone        \n10 Kids Pai… ART_AND…    4.7     121 3.1M  10,000+  Free  0     Everyone        \n# ℹ 10,831 more rows\n# ℹ 4 more variables: Genres <chr>, `Last Updated` <chr>, `Current Ver` <chr>,\n#   `Android Ver` <chr>\n```\n\n\n:::\n:::\n\n\n### Key Variables\n\n| Variable | Type | Description | Notes |\n|----------|------|-------------|-------|\n| **App** | String | Application name | May contain special characters |\n| **Category** | Categorical | Primary app category (33 categories) | Contains some miscoded entries |\n| **Rating** | Float | Average user rating (1.0-5.0) | Missing for unrated apps |\n| **Reviews** | Integer | Total number of user reviews | Indicator of popularity |\n| **Size** | String | App size with units (e.g., \"19M\") | Requires parsing; \"Varies with device\" for some |\n| **Installs** | Categorical | Install count ranges (e.g., \"10,000+\") | Ordinal categories, not exact counts |\n| **Type** | Binary | \"Free\" or \"Paid\" | Contains data quality issues |\n| **Price** | String | Price in USD (e.g., \"$2.99\") | \"0\" for free apps |\n| **Content Rating** | Categorical | Age appropriateness | \"Everyone\", \"Teen\", \"Mature 17+\", etc. |\n| **Genres** | String | Detailed genre (may be multiple) | Semicolon-separated |\n| **Last Updated** | Date | Last update date | Format: \"Month Day, Year\" |\n| **Current Ver** | String | App version | Non-standardized format |\n| **Android Ver** | String | Minimum Android version required | Format: \"X.X.X and up\" |      \n\n## Data Visualization\n\n### Univariate Distributions\n\n#### Categorical Variables\n\n**Bar charts** are the standard approach for visualizing categorical distributions. @fig-bar-chart reveals data quality issues: some apps have $Type = 0$ and missing values ($NaN$).\n\n::: {.panel-tabset}\n\n## Bar Chart\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(apps, aes(x = Type)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![App distribution by pricing type](practice_1_files/figure-html/fig-bar-chart-1.png){#fig-bar-chart width=672}\n:::\n:::\n\n\n## Pie Chart\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(apps, aes(x = \"\", fill = Type)) +\n  geom_bar(width = 1) +\n  coord_polar(theta = \"y\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![Alternative pie chart representation](practice_1_files/figure-html/fig-pie-chart-1.png){#fig-pie-chart width=672}\n:::\n:::\n\n\n## Data Quality Check\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(Type != \"Free\" & Type != \"Paid\") %>%\n  ggplot(aes(x = Type)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![Miscoded Type values (neither Free nor Paid)](practice_1_files/figure-html/fig-type-issues-1.png){#fig-type-issues width=672}\n:::\n:::\n\n:::\n\n#### Continuous Variables\n\nThe **Reviews** variable exhibits strong right skew. Multiple visualization approaches reveal different aspects of the distribution. Note: `geom_histogram()` defaults to 30 bins; adjust with `bins` argument.\n\n::: {.panel-tabset}\n\n## Histogram\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(apps, aes(x = Reviews)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![Review count distribution (raw scale)](practice_1_files/figure-html/fig-reviews-hist-1.png){#fig-reviews-hist width=672}\n:::\n:::\n\n\n## Histogram (Log Scale)\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(apps, aes(x = Reviews)) +\n  geom_histogram() +\n  scale_x_log10()\n```\n\n::: {.cell-output-display}\n![Review count distribution (log₁₀ scale)](practice_1_files/figure-html/fig-reviews-hist-log-1.png){#fig-reviews-hist-log width=672}\n:::\n:::\n\n\n## Boxplot (Horizontal)\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(apps, aes(x = Reviews)) +\n  geom_boxplot() +\n  scale_x_log10()\n```\n\n::: {.cell-output-display}\n![Review summary statistics (log₁₀ scale)](practice_1_files/figure-html/fig-boxplot-1.png){#fig-boxplot width=672}\n:::\n:::\n\n\n## Boxplot (Vertical)\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(apps, aes(y = Reviews)) +\n  geom_boxplot() +\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![Vertical boxplot using y aesthetic](practice_1_files/figure-html/fig-boxplot-vertical-1.png){#fig-boxplot-vertical width=672}\n:::\n:::\n\n\n## Density Plot\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(apps, aes(x = Reviews)) +\n  geom_density() +\n  scale_x_log10()\n```\n\n::: {.cell-output-display}\n![Smoothed density estimate (log₁₀ scale)](practice_1_files/figure-html/fig-density-1.png){#fig-density width=672}\n:::\n:::\n\n:::\n\n### Bivariate Relationships\n\n#### Categorical vs Continuous\n\n**Grouped visualizations** reveal how continuous variables differ across categories. @fig-rating-by-type compares rating distributions between free and paid apps.\n\n::: {.panel-tabset}\n\n## Grouped Boxplots\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(Type %in% c(\"Free\", \"Paid\")) %>%\n  ggplot(aes(x = Type, y = Rating, fill = Type)) +\n  geom_boxplot() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Rating distribution by app type](practice_1_files/figure-html/fig-rating-by-type-1.png){#fig-rating-by-type width=672}\n:::\n:::\n\n\n## Violin Plots\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(Type %in% c(\"Free\", \"Paid\")) %>%\n  ggplot(aes(x = Type, y = Rating, fill = Type)) +\n  geom_violin() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Rating density by app type](practice_1_files/figure-html/fig-rating-violin-1.png){#fig-rating-violin width=672}\n:::\n:::\n\n\n## Grouped Histograms\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(Type %in% c(\"Free\", \"Paid\")) %>%\n  ggplot(aes(x = Rating, fill = Type)) +\n  geom_histogram(bins = 30) +\n  facet_wrap(~Type, ncol = 1) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Rating distribution faceted by type](practice_1_files/figure-html/fig-rating-facet-1.png){#fig-rating-facet width=672}\n:::\n:::\n\n:::\n\n#### Continuous vs Continuous\n\n**Scatterplots** visualize relationships between two continuous variables. @fig-reviews-rating explores whether highly-reviewed apps have better ratings.\n\n::: {.panel-tabset}\n\n## Basic Scatterplot\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(!is.na(Rating)) %>%\n  ggplot(aes(x = Reviews, y = Rating)) +\n  geom_point(alpha = 0.3) +\n  scale_x_log10() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Relationship between reviews and ratings](practice_1_files/figure-html/fig-reviews-rating-1.png){#fig-reviews-rating width=672}\n:::\n:::\n\n\n## With Smoothing\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(!is.na(Rating)) %>%\n  ggplot(aes(x = Reviews, y = Rating)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = \"loess\", color = \"red\") +\n  scale_x_log10() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Reviews vs ratings with LOESS smoother](practice_1_files/figure-html/fig-reviews-rating-smooth-1.png){#fig-reviews-rating-smooth width=672}\n:::\n:::\n\n\n## Colored by Type\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(!is.na(Rating), Type %in% c(\"Free\", \"Paid\")) %>%\n  ggplot(aes(x = Reviews, y = Rating, color = Type)) +\n  geom_point(alpha = 0.4) +\n  scale_x_log10() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Reviews vs ratings, colored by app type](practice_1_files/figure-html/fig-reviews-rating-type-1.png){#fig-reviews-rating-type width=672}\n:::\n:::\n\n:::\n\n#### Categorical vs Categorical\n\n**Stacked and grouped bar charts** show relationships between categorical variables. @fig-type-by-content examines how app pricing varies across content ratings.\n\n::: {.panel-tabset}\n\n## Stacked Bar Chart\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(Type %in% c(\"Free\", \"Paid\")) %>%\n  ggplot(aes(x = `Content Rating`, fill = Type)) +\n  geom_bar() +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![App type distribution by content rating](practice_1_files/figure-html/fig-type-by-content-1.png){#fig-type-by-content width=672}\n:::\n:::\n\n\n## Grouped Bar Chart\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(Type %in% c(\"Free\", \"Paid\")) %>%\n  ggplot(aes(x = `Content Rating`, fill = Type)) +\n  geom_bar(position = \"dodge\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![Side-by-side comparison of app types](practice_1_files/figure-html/fig-type-by-content-dodge-1.png){#fig-type-by-content-dodge width=672}\n:::\n:::\n\n\n## Heatmap\n\n::: {.cell}\n\n```{.r .cell-code}\napps %>%\n  filter(Type %in% c(\"Free\", \"Paid\")) %>%\n  count(Type, `Content Rating`) %>%\n  ggplot(aes(x = `Content Rating`, y = Type, fill = n)) +\n  geom_tile() +\n  geom_text(aes(label = n), color = \"white\", size = 4) +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n  labs(fill = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![Count heatmap of app type by content rating](practice_1_files/figure-html/fig-type-by-content-heatmap-1.png){#fig-type-by-content-heatmap width=672}\n:::\n:::\n\n:::\n\n## Next Steps\n\n::: {.callout-tip}\n\n- **Data Cleaning**: Address missing values and miscoded entries in Type, Category, and other fields\n- **Feature Engineering**: Parse Size and Installs into numeric formats for quantitative analysis\n- **Advanced Analysis**: Examine temporal patterns using Last Updated, analyze price elasticity, investigate category-specific trends\n- **Multivariate Analysis**: Build models to predict ratings or success metrics based on app characteristics\n\n:::",
    "supporting": [
      "practice_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}