{
  "hash": "1fb1120c9d9841bd19d1a94e1bc2fc49",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Google Play Store Apps: Data Exploration with Python's plotnine\"\nformat: html\njupyter: python3\nexecute:\n  warning: false\n  message: false\n---\n\n## Python's plotnine\n\n**plotnine** is Python's implementation of R's ggplot2, providing Grammar of\nGraphics-based visualization capabilities. It offers familiar syntax for R\nusers while enabling declarative plot construction through layered components.\nThe library translates ggplot2's elegant API to Python, supporting aesthetic\nmappings, geometric objects (geoms), statistical transformations, scales,\ncoordinate systems, and themes. This approach promotes reproducible,\ncustomizable visualizations with intuitive code structure, making plotnine\nideal for data scientists transitioning between R and Python or seeking\nggplot2's expressiveness in Python workflows.\n\n## Setup\n\n::: {#b8ca2b83 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nfrom plotnine import *\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Load data\ndata_source = \"https://raw.githubusercontent.com/simoneSantoni/data-viz-smm635/refs/heads/master/data/googleplaystore.csv\"\napps = pd.read_csv(data_source)\n\n# Convert numeric columns\napps['Reviews'] = pd.to_numeric(apps['Reviews'], errors='coerce')\napps['Rating'] = pd.to_numeric(apps['Rating'], errors='coerce')\n```\n:::\n\n\n::: {.callout-note}\nThis dataset from [Kaggle's Google Play Store Apps project](https://www.kaggle.com/datasets/lava18/google-play-store-apps) contains information on ~10K Android apps including ratings, reviews, pricing, and categories.\n:::\n\n## Data Overview\n\n::: {#6882f81c .cell execution_count=2}\n``` {.python .cell-code}\napps.dtypes  # Column types\napps         # Data preview\n```\n\n::: {.cell-output .cell-output-display execution_count=59}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>App</th>\n      <th>Category</th>\n      <th>Rating</th>\n      <th>Reviews</th>\n      <th>Size</th>\n      <th>Installs</th>\n      <th>Type</th>\n      <th>Price</th>\n      <th>Content Rating</th>\n      <th>Genres</th>\n      <th>Last Updated</th>\n      <th>Current Ver</th>\n      <th>Android Ver</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Photo Editor &amp; Candy Camera &amp; Grid &amp; ScrapBook</td>\n      <td>ART_AND_DESIGN</td>\n      <td>4.1</td>\n      <td>159.0</td>\n      <td>19M</td>\n      <td>10,000+</td>\n      <td>Free</td>\n      <td>0</td>\n      <td>Everyone</td>\n      <td>Art &amp; Design</td>\n      <td>January 7, 2018</td>\n      <td>1.0.0</td>\n      <td>4.0.3 and up</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Coloring book moana</td>\n      <td>ART_AND_DESIGN</td>\n      <td>3.9</td>\n      <td>967.0</td>\n      <td>14M</td>\n      <td>500,000+</td>\n      <td>Free</td>\n      <td>0</td>\n      <td>Everyone</td>\n      <td>Art &amp; Design;Pretend Play</td>\n      <td>January 15, 2018</td>\n      <td>2.0.0</td>\n      <td>4.0.3 and up</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>U Launcher Lite – FREE Live Cool Themes, Hide ...</td>\n      <td>ART_AND_DESIGN</td>\n      <td>4.7</td>\n      <td>87510.0</td>\n      <td>8.7M</td>\n      <td>5,000,000+</td>\n      <td>Free</td>\n      <td>0</td>\n      <td>Everyone</td>\n      <td>Art &amp; Design</td>\n      <td>August 1, 2018</td>\n      <td>1.2.4</td>\n      <td>4.0.3 and up</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Sketch - Draw &amp; Paint</td>\n      <td>ART_AND_DESIGN</td>\n      <td>4.5</td>\n      <td>215644.0</td>\n      <td>25M</td>\n      <td>50,000,000+</td>\n      <td>Free</td>\n      <td>0</td>\n      <td>Teen</td>\n      <td>Art &amp; Design</td>\n      <td>June 8, 2018</td>\n      <td>Varies with device</td>\n      <td>4.2 and up</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Pixel Draw - Number Art Coloring Book</td>\n      <td>ART_AND_DESIGN</td>\n      <td>4.3</td>\n      <td>967.0</td>\n      <td>2.8M</td>\n      <td>100,000+</td>\n      <td>Free</td>\n      <td>0</td>\n      <td>Everyone</td>\n      <td>Art &amp; Design;Creativity</td>\n      <td>June 20, 2018</td>\n      <td>1.1</td>\n      <td>4.4 and up</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>10836</th>\n      <td>Sya9a Maroc - FR</td>\n      <td>FAMILY</td>\n      <td>4.5</td>\n      <td>38.0</td>\n      <td>53M</td>\n      <td>5,000+</td>\n      <td>Free</td>\n      <td>0</td>\n      <td>Everyone</td>\n      <td>Education</td>\n      <td>July 25, 2017</td>\n      <td>1.48</td>\n      <td>4.1 and up</td>\n    </tr>\n    <tr>\n      <th>10837</th>\n      <td>Fr. Mike Schmitz Audio Teachings</td>\n      <td>FAMILY</td>\n      <td>5.0</td>\n      <td>4.0</td>\n      <td>3.6M</td>\n      <td>100+</td>\n      <td>Free</td>\n      <td>0</td>\n      <td>Everyone</td>\n      <td>Education</td>\n      <td>July 6, 2018</td>\n      <td>1.0</td>\n      <td>4.1 and up</td>\n    </tr>\n    <tr>\n      <th>10838</th>\n      <td>Parkinson Exercices FR</td>\n      <td>MEDICAL</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>9.5M</td>\n      <td>1,000+</td>\n      <td>Free</td>\n      <td>0</td>\n      <td>Everyone</td>\n      <td>Medical</td>\n      <td>January 20, 2017</td>\n      <td>1.0</td>\n      <td>2.2 and up</td>\n    </tr>\n    <tr>\n      <th>10839</th>\n      <td>The SCP Foundation DB fr nn5n</td>\n      <td>BOOKS_AND_REFERENCE</td>\n      <td>4.5</td>\n      <td>114.0</td>\n      <td>Varies with device</td>\n      <td>1,000+</td>\n      <td>Free</td>\n      <td>0</td>\n      <td>Mature 17+</td>\n      <td>Books &amp; Reference</td>\n      <td>January 19, 2015</td>\n      <td>Varies with device</td>\n      <td>Varies with device</td>\n    </tr>\n    <tr>\n      <th>10840</th>\n      <td>iHoroscope - 2018 Daily Horoscope &amp; Astrology</td>\n      <td>LIFESTYLE</td>\n      <td>4.5</td>\n      <td>398307.0</td>\n      <td>19M</td>\n      <td>10,000,000+</td>\n      <td>Free</td>\n      <td>0</td>\n      <td>Everyone</td>\n      <td>Lifestyle</td>\n      <td>July 25, 2018</td>\n      <td>Varies with device</td>\n      <td>Varies with device</td>\n    </tr>\n  </tbody>\n</table>\n<p>10841 rows × 13 columns</p>\n</div>\n```\n:::\n:::\n\n\n### Key Variables\n\n| Variable | Type | Description | Notes |\n|----------|------|-------------|-------|\n| **App** | String | Application name | May contain special characters |\n| **Category** | Categorical | Primary app category (33 categories) | Contains some miscoded entries |\n| **Rating** | Float | Average user rating (1.0-5.0) | Missing for unrated apps |\n| **Reviews** | Integer | Total number of user reviews | Indicator of popularity |\n| **Size** | String | App size with units (e.g., \"19M\") | Requires parsing; \"Varies with device\" for some |\n| **Installs** | Categorical | Install count ranges (e.g., \"10,000+\") | Ordinal categories, not exact counts |\n| **Type** | Binary | \"Free\" or \"Paid\" | Contains data quality issues |\n| **Price** | String | Price in USD (e.g., \"$2.99\") | \"0\" for free apps |\n| **Content Rating** | Categorical | Age appropriateness | \"Everyone\", \"Teen\", \"Mature 17+\", etc. |\n| **Genres** | String | Detailed genre (may be multiple) | Semicolon-separated |\n| **Last Updated** | Date | Last update date | Format: \"Month Day, Year\" |\n| **Current Ver** | String | App version | Non-standardized format |\n| **Android Ver** | String | Minimum Android version required | Format: \"X.X.X and up\" |      \n\n## Data Visualization\n\n### Univariate Distributions\n\n#### Categorical Variables\n\n**Bar charts** are the standard approach for visualizing categorical distributions. @fig-bar-chart reveals data quality issues: some apps have $Type = 0$ and missing values ($NaN$).\n\n::: {.panel-tabset}\n\n## Bar Chart\n\n::: {#cell-fig-bar-chart .cell execution_count=3}\n``` {.python .cell-code}\n(ggplot(apps, aes(x='Type')) +\n  geom_bar())\n```\n\n::: {.cell-output .cell-output-display}\n![App distribution by pricing type](practice_2_files/figure-html/fig-bar-chart-output-1.png){#fig-bar-chart width=672 height=480}\n:::\n:::\n\n\n## Proportional Bar Chart\n\n::: {#cell-fig-prop-bar .cell execution_count=4}\n``` {.python .cell-code}\n(apps\n  .assign(category='All Apps')\n  .pipe(lambda d: ggplot(d, aes(x='category', fill='Type')) +\n    geom_bar(position='fill') +\n    coord_flip() +\n    labs(x='', y='Proportion') +\n    theme_minimal()))\n```\n\n::: {.cell-output .cell-output-display}\n![Proportional representation (coord_polar not available in plotnine)](practice_2_files/figure-html/fig-prop-bar-output-1.png){#fig-prop-bar width=672 height=480}\n:::\n:::\n\n\n## Data Quality Check\n\n::: {#cell-fig-type-issues .cell execution_count=5}\n``` {.python .cell-code}\n(apps\n  .query('Type != \"Free\" & Type != \"Paid\"')\n  .pipe(lambda d: ggplot(d, aes(x='Type')) + geom_bar()))\n```\n\n::: {.cell-output .cell-output-display}\n![Miscoded Type values (neither Free nor Paid)](practice_2_files/figure-html/fig-type-issues-output-1.png){#fig-type-issues width=672 height=480}\n:::\n:::\n\n\n:::\n\n#### Continuous Variables\n\nThe **Reviews** variable exhibits strong right skew. Multiple visualization approaches reveal different aspects of the distribution. Note: `geom_histogram()` defaults to 30 bins; adjust with `bins` argument.\n\n::: {.panel-tabset}\n\n## Histogram\n\n::: {#cell-fig-reviews-hist .cell execution_count=6}\n``` {.python .cell-code}\n(ggplot(apps, aes(x='Reviews')) +\n  geom_histogram())\n```\n\n::: {.cell-output .cell-output-display}\n![Review count distribution (raw scale)](practice_2_files/figure-html/fig-reviews-hist-output-1.png){#fig-reviews-hist width=672 height=480}\n:::\n:::\n\n\n## Histogram (Log Scale)\n\n::: {#cell-fig-reviews-hist-log .cell execution_count=7}\n``` {.python .cell-code}\n(apps\n  .query('Reviews > 0')\n  .pipe(lambda d: ggplot(d, aes(x='Reviews')) +\n    geom_histogram() +\n    scale_x_log10()))\n```\n\n::: {.cell-output .cell-output-display}\n![Review count distribution (log₁₀ scale)](practice_2_files/figure-html/fig-reviews-hist-log-output-1.png){#fig-reviews-hist-log width=672 height=480}\n:::\n:::\n\n\n## Boxplot (Horizontal)\n\n::: {#cell-fig-boxplot .cell execution_count=8}\n``` {.python .cell-code}\n(apps\n  .query('Reviews > 0')\n  .assign(category='Reviews')\n  .pipe(lambda d: ggplot(d, aes(x='category', y='Reviews')) +\n    geom_boxplot() +\n    scale_y_log10() +\n    coord_flip() +\n    labs(x='') +\n    theme_minimal()))\n```\n\n::: {.cell-output .cell-output-display}\n![Review summary statistics (log₁₀ scale)](practice_2_files/figure-html/fig-boxplot-output-1.png){#fig-boxplot width=672 height=480}\n:::\n:::\n\n\n## Boxplot (Vertical)\n\n::: {#cell-fig-boxplot-vertical .cell execution_count=9}\n``` {.python .cell-code}\n(apps\n  .query('Reviews > 0')\n  .assign(category='Reviews')\n  .pipe(lambda d: ggplot(d, aes(x='category', y='Reviews')) +\n    geom_boxplot() +\n    scale_y_log10() +\n    labs(x='') +\n    theme_minimal()))\n```\n\n::: {.cell-output .cell-output-display}\n![Vertical boxplot using y aesthetic](practice_2_files/figure-html/fig-boxplot-vertical-output-1.png){#fig-boxplot-vertical width=672 height=480}\n:::\n:::\n\n\n## Density Plot\n\n::: {#cell-fig-density .cell execution_count=10}\n``` {.python .cell-code}\n(apps\n  .query('Reviews > 0')\n  .pipe(lambda d: ggplot(d, aes(x='Reviews')) +\n    geom_density() +\n    scale_x_log10()))\n```\n\n::: {.cell-output .cell-output-display}\n![Smoothed density estimate (log₁₀ scale)](practice_2_files/figure-html/fig-density-output-1.png){#fig-density width=672 height=480}\n:::\n:::\n\n\n:::\n\n### Bivariate Relationships\n\n#### Categorical vs Continuous\n\n**Grouped visualizations** reveal how continuous variables differ across categories. @fig-rating-by-type compares rating distributions between free and paid apps.\n\n::: {.panel-tabset}\n\n## Grouped Boxplots\n\n::: {#cell-fig-rating-by-type .cell execution_count=11}\n``` {.python .cell-code}\n(apps\n  .query('Type in [\"Free\", \"Paid\"]')\n  .pipe(lambda d: ggplot(d, aes(x='Type', y='Rating', fill='Type')) +\n    geom_boxplot() +\n    theme_minimal()))\n```\n\n::: {.cell-output .cell-output-display}\n![Rating distribution by app type](practice_2_files/figure-html/fig-rating-by-type-output-1.png){#fig-rating-by-type width=672 height=480}\n:::\n:::\n\n\n## Violin Plots\n\n::: {#cell-fig-rating-violin .cell execution_count=12}\n``` {.python .cell-code}\n(apps\n  .query('Type in [\"Free\", \"Paid\"]')\n  .pipe(lambda d: ggplot(d, aes(x='Type', y='Rating', fill='Type')) +\n    geom_violin() +\n    theme_minimal()))\n```\n\n::: {.cell-output .cell-output-display}\n![Rating density by app type](practice_2_files/figure-html/fig-rating-violin-output-1.png){#fig-rating-violin width=672 height=480}\n:::\n:::\n\n\n## Grouped Histograms\n\n::: {#cell-fig-rating-facet .cell execution_count=13}\n``` {.python .cell-code}\n(apps\n  .query('Type in [\"Free\", \"Paid\"]')\n  .pipe(lambda d: ggplot(d, aes(x='Rating', fill='Type')) +\n    geom_histogram(bins=30) +\n    facet_wrap('~Type', ncol=1) +\n    theme_minimal()))\n```\n\n::: {.cell-output .cell-output-display}\n![Rating distribution faceted by type](practice_2_files/figure-html/fig-rating-facet-output-1.png){#fig-rating-facet width=672 height=480}\n:::\n:::\n\n\n:::\n\n#### Continuous vs Continuous\n\n**Scatterplots** visualize relationships between two continuous variables. @fig-reviews-rating explores whether highly-reviewed apps have better ratings.\n\n::: {.panel-tabset}\n\n## Basic Scatterplot\n\n::: {#cell-fig-reviews-rating .cell execution_count=14}\n``` {.python .cell-code}\n(apps\n  .dropna(subset=['Rating'])\n  .query('Reviews > 0')\n  .pipe(lambda d: ggplot(d, aes(x='Reviews', y='Rating')) +\n    geom_point(alpha=0.3) +\n    scale_x_log10() +\n    theme_minimal()))\n```\n\n::: {.cell-output .cell-output-display}\n![Relationship between reviews and ratings](practice_2_files/figure-html/fig-reviews-rating-output-1.png){#fig-reviews-rating width=672 height=480}\n:::\n:::\n\n\n## With Smoothing\n\n::: {#cell-fig-reviews-rating-smooth .cell execution_count=15}\n``` {.python .cell-code}\n(apps\n  .dropna(subset=['Rating'])\n  .query('Reviews > 0')\n  .pipe(lambda d: ggplot(d, aes(x='Reviews', y='Rating')) +\n    geom_point(alpha=0.2) +\n    geom_smooth(method='lm', color='red') +\n    scale_x_log10() +\n    theme_minimal()))\n```\n\n::: {.cell-output .cell-output-display}\n![Reviews vs ratings with linear smoother (loess requires scikit-misc)](practice_2_files/figure-html/fig-reviews-rating-smooth-output-1.png){#fig-reviews-rating-smooth width=672 height=480}\n:::\n:::\n\n\n## Colored by Type\n\n::: {#cell-fig-reviews-rating-type .cell execution_count=16}\n``` {.python .cell-code}\n(apps\n  .dropna(subset=['Rating'])\n  .query('Type in [\"Free\", \"Paid\"] and Reviews > 0')\n  .pipe(lambda d: ggplot(d, aes(x='Reviews', y='Rating', color='Type')) +\n    geom_point(alpha=0.4) +\n    scale_x_log10() +\n    theme_minimal()))\n```\n\n::: {.cell-output .cell-output-display}\n![Reviews vs ratings, colored by app type](practice_2_files/figure-html/fig-reviews-rating-type-output-1.png){#fig-reviews-rating-type width=672 height=480}\n:::\n:::\n\n\n:::\n\n#### Categorical vs Categorical\n\n**Stacked and grouped bar charts** show relationships between categorical variables. @fig-type-by-content examines how app pricing varies across content ratings.\n\n::: {.panel-tabset}\n\n## Stacked Bar Chart\n\n::: {#cell-fig-type-by-content .cell execution_count=17}\n``` {.python .cell-code}\n(apps\n  .query('Type in [\"Free\", \"Paid\"]')\n  .pipe(lambda d: ggplot(d, aes(x='Content Rating', fill='Type')) +\n    geom_bar() +\n    theme_minimal() +\n    theme(axis_text_x=element_text(angle=45, hjust=1))))\n```\n\n::: {.cell-output .cell-output-display}\n![App type distribution by content rating](practice_2_files/figure-html/fig-type-by-content-output-1.png){#fig-type-by-content width=672 height=480}\n:::\n:::\n\n\n## Grouped Bar Chart\n\n::: {#cell-fig-type-by-content-dodge .cell execution_count=18}\n``` {.python .cell-code}\n(apps\n  .query('Type in [\"Free\", \"Paid\"]')\n  .pipe(lambda d: ggplot(d, aes(x='Content Rating', fill='Type')) +\n    geom_bar(position='dodge') +\n    theme_minimal() +\n    theme(axis_text_x=element_text(angle=45, hjust=1))))\n```\n\n::: {.cell-output .cell-output-display}\n![Side-by-side comparison of app types](practice_2_files/figure-html/fig-type-by-content-dodge-output-1.png){#fig-type-by-content-dodge width=672 height=480}\n:::\n:::\n\n\n## Heatmap\n\n::: {#cell-fig-type-by-content-heatmap .cell execution_count=19}\n``` {.python .cell-code}\n(apps\n  .query('Type in [\"Free\", \"Paid\"]')\n  .groupby(['Type', 'Content Rating'], as_index=False)\n  .size()\n  .rename(columns={'size': 'n'})\n  .pipe(lambda d: ggplot(d, aes(x='Content Rating', y='Type', fill='n')) +\n    geom_tile() +\n    geom_text(aes(label='n'), color='white', size=4) +\n    scale_fill_gradient(low='lightblue', high='darkblue') +\n    labs(fill='Count') +\n    theme_minimal() +\n    theme(axis_text_x=element_text(angle=45, hjust=1))))\n```\n\n::: {.cell-output .cell-output-display}\n![Count heatmap of app type by content rating](practice_2_files/figure-html/fig-type-by-content-heatmap-output-1.png){#fig-type-by-content-heatmap width=672 height=480}\n:::\n:::\n\n\n:::\n\n## Next Steps\n\n::: {.callout-tip}\n\n- **Data Cleaning**: Address missing values and miscoded entries in Type, Category, and other fields\n- **Feature Engineering**: Parse Size and Installs into numeric formats for quantitative analysis\n- **Advanced Analysis**: Examine temporal patterns using Last Updated, analyze price elasticity, investigate category-specific trends\n- **Multivariate Analysis**: Build models to predict ratings or success metrics based on app characteristics\n\n:::\n\n",
    "supporting": [
      "practice_2_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}